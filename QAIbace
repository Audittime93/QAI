Buat cabang PA5 # Spencer Ochs from misc import * import crypt def load_words(filename,regexp): """Muat kata-kata dari nama file file yang cocok dengan ekspresi reguler regexp. Mengembalikan daftar kata-kata yang cocok sesuai urutannya dalam file. """ f = open(filename, 'r') text = f.read() f.close() # findall() cocok dengan semua kemunculan regexp dalam teks dan dikembalikan sebagai daftar #return re.findall(regexp, text ) reComp = re.compile(regexp) reMatchList = [] # pisahkan teks menjadi daftar kata lalu isi daftar dengan kata-kata yang cocok dengan yang diteruskan dalam regexp untuk kata dalam text.split('\n'): if reComp.match (kata): reMatchList.append(word) return reMatchList def transform_reverse(str): """Mengembalikan daftar dengan string asli dan pembalikan string itu""" return [str, "".join(reversed(str ))] def transform_capitalize(str): """Mengembalikan daftar semua kemungkinan cara untuk memanfaatkan input str""" strList = [] # membuat panggilan rekursif dengan fungsi pembantu di mana setiap panggilan adalah cabang # di mana salah satu dari ith char dalam daftar adalah huruf besar atau kecil def recHelper(prevStr, string, strList): # huruf dasar jika len(string) == 1: strList.append( prevStr + string.upper() ) strList.append( prevStr + string.lower() ) return strList # kasus rekursif terbagi menjadi dua jalur yang satu memiliki karakter pertama dari string sebelumnya dengan huruf kapital, dan jalur lainnya dengan karakter pertama menggunakan huruf kecil recHelper(prevStr + string[0].upper(), string[1 :], strList) recHelper(prevStr + string[0].lower(), string[1:], strList) recHelper("", str, strList) return strList def transform_digits(str): """Mengembalikan daftar 
